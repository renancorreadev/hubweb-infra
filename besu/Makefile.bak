# Makefile para gerenciamento do Hyperledger Besu
.PHONY: help setup start stop status restart reset clean logs check init explorer setup-perms fix

# Vari√°veis
DOCKER_COMPOSE = docker-compose

# Cores para output
GREEN := \033[0;32m
YELLOW := \033[0;33m
RED := \033[0;31m
NC := \033[0m # No Color

help:
	@echo "${YELLOW}Makefile para gerenciamento do Hyperledger Besu${NC}"
	@echo ""
	@echo "${GREEN}Comandos dispon√≠veis:${NC}"
	@echo "  ${YELLOW}make setup${NC}        - Inicializa a rede Besu (executa init.sh)"
	@echo "  ${YELLOW}make start${NC}        - Inicia os containers Besu"
	@echo "  ${YELLOW}make stop${NC}         - Para os containers Besu"
	@echo "  ${YELLOW}make status${NC}       - Verifica o status atual dos containers"
	@echo "  ${YELLOW}make restart${NC}      - Reinicia os containers Besu"
	@echo "  ${YELLOW}make reset${NC}        - Reseta a rede Besu (remove tudo e reconfigura)"
	@echo "  ${YELLOW}make clean${NC}        - Para os containers e remove volumes (‚ö†Ô∏è Cuidado!)"
	@echo "  ${YELLOW}make logs${NC}         - Exibe os logs do bootnode"
	@echo "  ${YELLOW}make check${NC}        - Verifica se a rede est√° funcionando"
	@echo "  ${YELLOW}make explorer${NC}     - Acessa o explorador da rede"
	@echo "  ${YELLOW}make setup-perms${NC}  - Configura permiss√µes corretas para os arquivos"
	@echo "  ${YELLOW}make fix${NC}          - Corrige a estrutura de arquivos"
	@echo ""
	@echo "${RED}‚ö†Ô∏è  Aten√ß√£o:${NC} Os comandos 'reset' e 'clean' removem todos os dados da blockchain!"

setup:
	@echo "${GREEN}Inicializando a rede Besu...${NC}"
	@mkdir -p ./data
	@chmod +x ./init.sh
	@./init.sh
	@echo "${YELLOW}Verificando se os arquivos necess√°rios foram criados...${NC}"
	@if [ ! -f "./data/genesis.json" ]; then \
		echo "${RED}Erro: Arquivo genesis.json n√£o encontrado!${NC}"; \
		exit 1; \
	fi
	@echo "${GREEN}Inicializa√ß√£o conclu√≠da!${NC}"
	@echo "${YELLOW}Para iniciar os containers, use: make start${NC}"

start:
	@echo "${GREEN}Verificando pr√©-requisitos...${NC}"
	@mkdir -p ./scripts
	@if [ ! -f "./scripts/fix-permissions.sh" ]; then $(MAKE) fix > /dev/null; fi
	@if [ -f "./scripts/fix-permissions.sh" ]; then ./scripts/fix-permissions.sh > /dev/null || exit 1; fi
	@echo "${GREEN}Iniciando containers Besu...${NC}"
	@$(DOCKER_COMPOSE) up -d
	@echo "${GREEN}Containers iniciados. Aguarde alguns instantes at√© que a rede esteja sincronizada.${NC}"
	@echo "${YELLOW}Para verificar os logs, use: make logs${NC}"

stop:
	@echo "${YELLOW}Parando containers Besu...${NC}"
	@$(DOCKER_COMPOSE) stop
	@echo "${GREEN}Containers parados.${NC}"

status:
	@echo "${GREEN}Verificando status dos containers Besu...${NC}"
	@$(DOCKER_COMPOSE) ps

restart:
	@echo "${YELLOW}Reiniciando containers Besu...${NC}"
	@$(DOCKER_COMPOSE) restart
	@echo "${GREEN}Containers reiniciados.${NC}"

reset:
	@echo "${RED}‚ö†Ô∏è Aten√ß√£o: Isso remover√° TODOS os dados da blockchain!${NC}"
	@read -p "Tem certeza que deseja continuar? (y/n): " confirm && \
	  [ $${confirm:-n} = "y" ] || exit 1
	@$(MAKE) clean
	@$(MAKE) setup
	@$(MAKE) start
	@echo "${GREEN}Rede Besu resetada e reiniciada com sucesso!${NC}"

clean:
	@echo "${RED}‚ö†Ô∏è Aten√ß√£o: Isso remover√° TODOS os dados da blockchain!${NC}"
	@read -p "Tem certeza que deseja continuar? (y/n): " confirm && \
	  [ $${confirm:-n} = "y" ] || exit 1
	@echo "${YELLOW}Parando containers e removendo volumes...${NC}"
	@$(DOCKER_COMPOSE) down -v
	@echo "${YELLOW}Removendo diret√≥rio de dados...${NC}"
	@rm -rf ./data/*
	@echo "${GREEN}Limpeza conclu√≠da.${NC}"

logs:
	@echo "${GREEN}Exibindo logs do bootnode (Ctrl+C para sair)...${NC}"
	@$(DOCKER_COMPOSE) logs -f bootnode

check:
	@echo "${GREEN}Verificando se a rede Besu est√° funcionando...${NC}"
	@curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8545 | jq || echo "${RED}Erro ao conectar √† rede. Verifique se ela est√° em execu√ß√£o.${NC}"

explorer:
	@echo "${GREEN}O explorador est√° dispon√≠vel em: ${YELLOW}http://localhost:80${NC}"
	@echo "${GREEN}Abrindo no navegador padr√£o...${NC}"
	@open http://localhost:80 2>/dev/null || xdg-open http://localhost:80 2>/dev/null || echo "${YELLOW}Abra manualmente no seu navegador: http://localhost:80${NC}"

setup-perms:
	@echo "${YELLOW}Configurando permiss√µes dos arquivos...${NC}"
	@chmod +x ./init.sh
	@mkdir -p ./data
	@chmod -R 777 ./data 2>/dev/null || true
	@if [ -f "./scripts/fix-permissions.sh" ]; then \
		chmod +x ./scripts/fix-permissions.sh; \
		./scripts/fix-permissions.sh; \
	fi
	@echo "${GREEN}Permiss√µes configuradas.${NC}"

fix:
	@echo "${YELLOW}Tentando corrigir a estrutura de arquivos...${NC}"
	@mkdir -p ./scripts
	@cat > ./scripts/fix-permissions.sh << 'EOF'
#!/bin/bash

echo "üîß Corrigindo permiss√µes e estrutura de arquivos para o Besu..."

# Diret√≥rio base
BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
DATA_DIR="$BASE_DIR/data"

# Criar diret√≥rios se n√£o existirem
mkdir -p "$DATA_DIR"
for node in node1 node2 node3 node4; do
    mkdir -p "$DATA_DIR/$node/data"
done

# Verificar genesis.json
if [ ! -f "$DATA_DIR/genesis.json" ] && [ -f "$DATA_DIR/networkFiles/genesis.json" ]; then
    echo "üìÑ Copiando genesis.json para o diret√≥rio correto..."
    cp "$DATA_DIR/networkFiles/genesis.json" "$DATA_DIR/"
fi

# Se ainda n√£o existir, criar um erro
if [ ! -f "$DATA_DIR/genesis.json" ]; then
    echo "‚ùå Erro: genesis.json n√£o encontrado!"
    echo "   Execute 'make setup' para inicializar a rede Besu."
    exit 1
fi

# Verificar exist√™ncia de arquivo log-config.xml
if [ ! -f "$DATA_DIR/log-config.xml" ]; then
    echo "üìÑ Criando arquivo log-config.xml padr√£o..."
    cat > "$DATA_DIR/log-config.xml" << LOGXML
<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO">
  <Appenders>
    <Console name="Console" target="SYSTEM_OUT">
      <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} | %p | %c | %msg%n" />
    </Console>
  </Appenders>
  <Loggers>
    <Root level="INFO">
      <AppenderRef ref="Console" />
    </Root>
  </Loggers>
</Configuration>
LOGXML
fi

# Corrigir permiss√µes
echo "üîí Ajustando permiss√µes..."
chmod -R 755 "$DATA_DIR"
if [ -f "$DATA_DIR/genesis.json" ]; then
    chmod 644 "$DATA_DIR/genesis.json"
fi
if [ -f "$DATA_DIR/log-config.xml" ]; then
    chmod 644 "$DATA_DIR/log-config.xml"
fi

echo "‚úÖ Verifica√ß√£o e corre√ß√£o conclu√≠das!"
EOF
	@chmod +x ./scripts/fix-permissions.sh
	@./scripts/fix-permissions.sh
	@echo "${GREEN}Corre√ß√£o conclu√≠da. Tente iniciar a rede novamente com 'make start'.{NC}" 